name: build-test-lint
on: [push, pull_request]

env:
  BUILD_PLATFORMS: linux/amd64,linux/arm64,linux/ppc64le

jobs:
  build:
    name: build
    strategy:
      matrix:
        go-version: [1.22.x]
        goarch: [amd64,arm64,ppc64le]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go matrix
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Build
        env:
          GOARCH: ${{ matrix.goarch }}
          GOOS: ${{ matrix.goos }}
        run: make build

  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push container image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: ${{ env.BUILD_PLATFORMS }}
          file: ./Dockerfile


  test:
    runs-on: ubuntu-latest
    needs: build
    name: test
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install hwdata
        run: sudo apt-get install hwdata -y

      - name: Go test
        run: make test

  test-coverage:
    runs-on: ubuntu-latest
    needs: build
    name: test-coverage
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - uses: actions/checkout@v4

      - name: Install hwdata
        run: sudo apt-get install hwdata -y

      - name: Go test with coverage
        run: make test-coverage

  golangci:
    name: Golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.63.4

  hadolint:
    runs-on: ubuntu-latest
    name: Hadolint
    steps:
    - uses: actions/checkout@v4
    - uses: brpaz/hadolint-action@v1.5.0
      name: Run Hadolint
      with:
       dockerfile: ./Dockerfile
       ignore: DL3018 # DL3018: GH issue 368

  go-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22.x

    # if this fails, run go mod tidy
    - name: Check if module files are consistent with code
      run: go mod tidy && git diff --exit-code

    # if this fails, run go mod vendor
    - name: Check if vendor directory is consistent with go modules
      run: go mod vendor && git diff --exit-code
